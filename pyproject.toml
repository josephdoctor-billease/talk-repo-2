[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "task-management-api"
version = "0.1.0"
description = "A simple FastAPI task management application"
readme = "README.md"
requires-python = ">=3.8.1"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.13.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "email-validator>=2.1.0",
    "greenlet>=3.0.0",
]


[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "faker>=20.0.0",
    "factory-boy>=3.3.0",
    
    # Development tools
    "tox>=4.11.0",
    "pre-commit>=3.5.0",
    
    # Linting and formatting
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "bandit>=1.7.5",
    
    # Type stubs
    "types-passlib>=1.7.0",
]

# Tool configurations

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=domain",
    "--cov=application", 
    "--cov=infrastructure",
    "--cov=presentation",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=0",
]
testpaths = ["tests"]
asyncio_mode = "auto"
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["domain", "application", "infrastructure", "presentation"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "alembic/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "except Exception:",
    "except.*Error:",
    "raise HTTPException",
    "def get_.*\\(.*\\).*:",
    "@router\\.(get|post|put|delete|patch)",
    "async def.*\\(.*session.*AsyncSession.*\\)",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | alembic
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
skip = ["alembic"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
exclude = [
    "alembic/",
    "tests/",
]

[[tool.mypy.overrides]]
module = [
    "passlib.*",
    "jose.*",
    "bcrypt.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "alembic"]
skips = ["B101", "B601"]