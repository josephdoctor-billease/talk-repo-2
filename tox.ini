[tox]
envlist = py{38,39,310,311,312,313}, lint, type, security, format-check
isolated_build = True

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
deps = 
    pytest>=7.4.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
    httpx>=0.25.0
    faker>=20.0.0
    factory-boy>=3.3.0
    fastapi>=0.104.1
    uvicorn[standard]>=0.24.0
    sqlalchemy>=2.0.0
    asyncpg>=0.29.0
    psycopg2-binary>=2.9.0
    alembic>=1.13.0
    python-jose[cryptography]>=3.3.0
    passlib[bcrypt]>=1.7.4
    python-multipart>=0.0.6
    email-validator>=2.1.0
    greenlet>=3.0.0
    
commands = 
    pytest {posargs}

[testenv:unit]
deps = {[testenv]deps}
commands = 
    pytest tests/unit/ -v --cov-report=html --cov-report=term-missing

[testenv:integration]
deps = {[testenv]deps}
setenv = 
    TEST_DATABASE_URL = postgresql+asyncpg://test_user:test_password@localhost:5433/task_management_test
commands = 
    pytest tests/integration/ -v --cov-append

[testenv:test]
deps = {[testenv]deps}
commands = 
    pytest -v --cov-report=html --cov-report=term-missing --cov-report=xml

[testenv:lint]
deps = 
    flake8>=6.1.0
    flake8-docstrings
    flake8-import-order
    flake8-broken-line
    
commands = 
    flake8 domain/ application/ infrastructure/ presentation/ main.py

[testenv:type]
deps = 
    mypy>=1.6.0
    types-passlib>=1.7.0
    
commands = 
    mypy domain/ application/ infrastructure/ presentation/ main.py

[testenv:security]
deps = 
    bandit>=1.7.5
    
commands = 
    bandit -r domain/ application/ infrastructure/ presentation/ main.py

[testenv:format]
deps = 
    black>=23.9.0
    isort>=5.12.0
    
commands = 
    black domain/ application/ infrastructure/ presentation/ main.py tests/
    isort domain/ application/ infrastructure/ presentation/ main.py tests/

[testenv:format-check]
deps = 
    black>=23.9.0
    isort>=5.12.0
    
commands = 
    black --check --diff domain/ application/ infrastructure/ presentation/ main.py tests/
    isort --check-only --diff domain/ application/ infrastructure/ presentation/ main.py tests/

[testenv:all]
deps = {[testenv]deps}
commands = 
    {[testenv:format-check]commands}
    {[testenv:lint]commands}  
    {[testenv:type]commands}
    {[testenv:security]commands}
    {[testenv:test]commands}

[testenv:dev]
deps = 
    {[testenv]deps}
    {[testenv:format]deps}
    {[testenv:lint]deps}
    {[testenv:type]deps}
    {[testenv:security]deps}
    pre-commit>=3.5.0
    tox>=4.11.0
    
commands = 
    python -c "print('Development environment ready!')"
    python -c "print('Available commands:')"
    python -c "print('  tox -e test      # Run all tests with coverage')"
    python -c "print('  tox -e unit      # Run unit tests only')"
    python -c "print('  tox -e integration # Run integration tests only')"
    python -c "print('  tox -e lint      # Run linting')"
    python -c "print('  tox -e type      # Run type checking')"
    python -c "print('  tox -e security  # Run security checks')"
    python -c "print('  tox -e format    # Auto-format code')"
    python -c "print('  tox -e all       # Run all checks and tests')"

[flake8]
max-line-length = 88
max-complexity = 10
extend-ignore = 
    E203,
    E501,
    W503,
    D100,
    D101,
    D102,
    D103,
    D104,
    D105
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg-info,
    build,
    dist,
    .venv,
    alembic/,
per-file-ignores =
    tests/*:D
import-order-style = google
application-import-names = domain,application,infrastructure,presentation